#검색창에 입력하고 넘어가기
popupbutton<-remDr$findElements(using='css', "body > div.k-widget.k-window > div.k-intro-popup.k-window-content.k-content > div.window-footer > a")
sapply(popupbutton,function(x){x$clickElement()})
searchbar<- remDr$findElement(using = "css", "#keyword")
searchbar$sendKeysToElement(list(search))
searchbutton<-remDr$findElements(using='css', "body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-header-wrap > div.ikc-imagezone-wrap > div > form > button")
sapply(searchbutton,function(x){x$clickElement()})
#전체 페이지 찾기
searchbutton<-remDr$findElements(using='css', "a[ng-click='pagination.lastPage()'")
pt<-sapply(searchbutton,function(x){x$clickElement()})
last<- remDr$findElements(using = 'css',"body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div:nth-child(5) > div > a.active")
lastpage <-sapply(last, function(x){x$getElementText()})
#lastpage
lastpage<-unlist(lastpage)
page<- as.numeric(lastpage)
#page
first<- remDr$findElements(using = 'css',"body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div:nth-child(5) > div > a:nth-child(1)")
firstpage <- sapply(first, function(x){x$clickElement()})
#temp_title
read <- remDr$findElements(using = "css", 'body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div.ikc-search-result > div > div.ikc-item-info > ul > li:nth-child(1) > a.ikc-item-title > span')
temp_title<-sapply(read, function (x) {x$getElementText()})
#temp_lib
read <- remDr$findElements(using = "css", 'body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div.ikc-search-result > div > div.ikc-item-info > ul > li.ikc-item-branchvolumes > ul > li:nth-child(1) > span.ikc-item-branch')
temp_lib<-sapply(read, function (x) {x$getElementText()})
#temp_ab
read <- remDr$findElements(using = "css", 'body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div.ikc-search-result > div > div.ikc-item-info > ul > li.ikc-item-branchvolumes > ul > li:nth-child(1) > div > a.hidden-xs > span.ikc-item-status')
temp_ab<-sapply(read, function (x) {x$getElementText()})
result_guro<-data.frame(unlist(temp_title), unlist(temp_lib), unlist(temp_ab))
result_guro
#오류발생
temp<-3+page
if(lastpage>=2){
for(i in 5: temp){
page_numb<-paste("body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div:nth-child(5) > div > a:nth-child(",i,")",sep="")
searchbutton<-remDr$findElements(using='css',page_numb)
sapply(searchbutton,function(x){x$clickElement()})
read <- remDr$findElements(using = "css", 'body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div.ikc-search-result > div > div.ikc-item-info > ul > li:nth-child(1) > a.ikc-item-title > span')
temp_title<-sapply(read, function (x) {x$getElementText()})
temp_title
read <- remDr$findElements(using = "css", 'body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div.ikc-search-result > div:nth-child(1) > div.ikc-item-info > ul > li.ikc-item-branchvolumes > ul > li:nth-child(1) > span.ikc-item-branch')
temp_lib<-sapply(read, function (x) {x$getElementText()})
temp_lib
read <- remDr$findElements(using = "css", 'body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div.ikc-search-result > div > div.ikc-item-info > ul > li.ikc-item-branchvolumes > ul > li:nth-child(1) > div > a.hidden-xs > span.ikc-item-status')
temp_ab<-sapply(read, function (x) {x$getElementText()})
#temp_ab
result_guro_2<- data.frame(unlist(temp_title), unlist(temp_lib), unlist(temp_ab))
#result_guro_2
result_guro<-rbind(result_guro, result_guro_2)
}
}
result_guro <- result_guro[,-3] #대출가능한것만 추출했으니 대출가능여부는 제외하고 책이름, 도서관 두 가지만 표시
result_guro
remDr$navigate("http://lib.guro.go.kr/#/")
remDr$open()
remDr$navigate("http://lib.guro.go.kr/#/")
searchbar<- remDr$findElement(using = "css", "#keyword")
searchbar$sendKeysToElement(list(search))
searchbutton<-remDr$findElements(using='css', "body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-header-wrap > div.ikc-imagezone-wrap > div > form > button")
sapply(searchbutton,function(x){x$clickElement()})
#검색창에 입력하고 넘어가기
popupbutton<-remDr$findElements(using='css', "body > div.k-widget.k-window > div.k-intro-popup.k-window-content.k-content > div.window-footer > a")
sapply(popupbutton,function(x){x$clickElement()})
searchbutton<-remDr$findElements(using='css', "body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-header-wrap > div.ikc-imagezone-wrap > div > form > button")
sapply(searchbutton,function(x){x$clickElement()})
library(RSelenium)
library(httr)
library(rvest)
library(XML)
remDr<-remoteDriver(remoteServerAddr="localhost", port=4445, browserName="chrome")
remDr$open()
remDr$navigate("http://lib.guro.go.kr/#/")
#검색창에 입력하고 넘어가기
delay(500)
popupbutton<-remDr$findElements(using='css', "body > div.k-widget.k-window > div.k-intro-popup.k-window-content.k-content > div.window-footer > a")
sapply(popupbutton,function(x){x$clickElement()})
searchbar<- remDr$findElement(using = "css", "#keyword")
searchbar$sendKeysToElement(list(search))
searchbutton<-remDr$findElements(using='css', "body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-header-wrap > div.ikc-imagezone-wrap > div > form > button")
sapply(searchbutton,function(x){x$clickElement()})
#전체 페이지 찾기
searchbutton<-remDr$findElements(using='css', "a[ng-click='pagination.lastPage()'")
pt<-sapply(searchbutton,function(x){x$clickElement()})
last<- remDr$findElements(using = 'css',"body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div:nth-child(5) > div > a.active")
lastpage <-sapply(last, function(x){x$getElementText()})
#lastpage
lastpage<-unlist(lastpage)
page<- as.numeric(lastpage)
#page
first<- remDr$findElements(using = 'css',"body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div:nth-child(5) > div > a:nth-child(1)")
firstpage <- sapply(first, function(x){x$clickElement()})
#temp_title
read <- remDr$findElements(using = "css", 'body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div.ikc-search-result > div > div.ikc-item-info > ul > li:nth-child(1) > a.ikc-item-title > span')
temp_title<-sapply(read, function (x) {x$getElementText()})
#temp_lib
read <- remDr$findElements(using = "css", 'body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div.ikc-search-result > div > div.ikc-item-info > ul > li.ikc-item-branchvolumes > ul > li:nth-child(1) > span.ikc-item-branch')
temp_lib<-sapply(read, function (x) {x$getElementText()})
#temp_ab
read <- remDr$findElements(using = "css", 'body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div.ikc-search-result > div > div.ikc-item-info > ul > li.ikc-item-branchvolumes > ul > li:nth-child(1) > div > a.hidden-xs > span.ikc-item-status')
temp_ab<-sapply(read, function (x) {x$getElementText()})
result_guro<-data.frame(unlist(temp_title), unlist(temp_lib), unlist(temp_ab))
result_guro
#오류발생
temp<-3+page
if(lastpage>=2){
for(i in 5: temp){
page_numb<-paste("body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div:nth-child(5) > div > a:nth-child(",i,")",sep="")
searchbutton<-remDr$findElements(using='css',page_numb)
sapply(searchbutton,function(x){x$clickElement()})
read <- remDr$findElements(using = "css", 'body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div.ikc-search-result > div > div.ikc-item-info > ul > li:nth-child(1) > a.ikc-item-title > span')
temp_title<-sapply(read, function (x) {x$getElementText()})
temp_title
read <- remDr$findElements(using = "css", 'body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div.ikc-search-result > div:nth-child(1) > div.ikc-item-info > ul > li.ikc-item-branchvolumes > ul > li:nth-child(1) > span.ikc-item-branch')
temp_lib<-sapply(read, function (x) {x$getElementText()})
temp_lib
read <- remDr$findElements(using = "css", 'body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div.ikc-search-result > div > div.ikc-item-info > ul > li.ikc-item-branchvolumes > ul > li:nth-child(1) > div > a.hidden-xs > span.ikc-item-status')
temp_ab<-sapply(read, function (x) {x$getElementText()})
#temp_ab
result_guro_2<- data.frame(unlist(temp_title), unlist(temp_lib), unlist(temp_ab))
#result_guro_2
result_guro<-rbind(result_guro, result_guro_2)
}
}
result_guro <- result_guro[,-3] #대출가능한것만 추출했으니 대출가능여부는 제외하고 책이름, 도서관 두 가지만 표시
result_guro
library(RSelenium)
library(httr)
library(rvest)
library(XML)
remDr<-remoteDriver(remoteServerAddr="localhost", port=4445, browserName="chrome")
remDr$open()
remDr$navigate("http://lib.guro.go.kr/#/")
#검색창에 입력하고 넘어가기
Sys.sleep(500)
#검색창에 입력하고 넘어가기
Sys.sleep(5)
library(RSelenium)
library(httr)
library(rvest)
library(XML)
remDr<-remoteDriver(remoteServerAddr="localhost", port=4445, browserName="chrome")
remDr$open()
remDr$navigate("http://lib.guro.go.kr/#/")
#검색창에 입력하고 넘어가기
Sys.sleep(5)
popupbutton<-remDr$findElements(using='css', "body > div.k-widget.k-window > div.k-intro-popup.k-window-content.k-content > div.window-footer > a")
sapply(popupbutton,function(x){x$clickElement()})
searchbar<- remDr$findElement(using = "css", "#keyword")
searchbar$sendKeysToElement(list(search))
searchbutton<-remDr$findElements(using='css', "body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-header-wrap > div.ikc-imagezone-wrap > div > form > button")
sapply(searchbutton,function(x){x$clickElement()})
#전체 페이지 찾기
searchbutton<-remDr$findElements(using='css', "a[ng-click='pagination.lastPage()'")
pt<-sapply(searchbutton,function(x){x$clickElement()})
last<- remDr$findElements(using = 'css',"body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div:nth-child(5) > div > a.active")
lastpage <-sapply(last, function(x){x$getElementText()})
#lastpage
lastpage<-unlist(lastpage)
page<- as.numeric(lastpage)
#page
first<- remDr$findElements(using = 'css',"body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div:nth-child(5) > div > a:nth-child(1)")
firstpage <- sapply(first, function(x){x$clickElement()})
#temp_title
read <- remDr$findElements(using = "css", 'body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div.ikc-search-result > div > div.ikc-item-info > ul > li:nth-child(1) > a.ikc-item-title > span')
temp_title<-sapply(read, function (x) {x$getElementText()})
#temp_lib
read <- remDr$findElements(using = "css", 'body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div.ikc-search-result > div > div.ikc-item-info > ul > li.ikc-item-branchvolumes > ul > li:nth-child(1) > span.ikc-item-branch')
temp_lib<-sapply(read, function (x) {x$getElementText()})
#temp_ab
read <- remDr$findElements(using = "css", 'body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div.ikc-search-result > div > div.ikc-item-info > ul > li.ikc-item-branchvolumes > ul > li:nth-child(1) > div > a.hidden-xs > span.ikc-item-status')
temp_ab<-sapply(read, function (x) {x$getElementText()})
result_guro<-data.frame(unlist(temp_title), unlist(temp_lib), unlist(temp_ab))
result_guro
#오류발생
temp<-3+page
if(lastpage>=2){
for(i in 5: temp){
page_numb<-paste("body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div:nth-child(5) > div > a:nth-child(",i,")",sep="")
searchbutton<-remDr$findElements(using='css',page_numb)
sapply(searchbutton,function(x){x$clickElement()})
read <- remDr$findElements(using = "css", 'body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div.ikc-search-result > div > div.ikc-item-info > ul > li:nth-child(1) > a.ikc-item-title > span')
temp_title<-sapply(read, function (x) {x$getElementText()})
temp_title
read <- remDr$findElements(using = "css", 'body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div.ikc-search-result > div:nth-child(1) > div.ikc-item-info > ul > li.ikc-item-branchvolumes > ul > li:nth-child(1) > span.ikc-item-branch')
temp_lib<-sapply(read, function (x) {x$getElementText()})
temp_lib
read <- remDr$findElements(using = "css", 'body > div.ikc-pyxis-wrap > div.ikc-container-wrap > div.ikc-container > div > div.ikc-main > div.ikc-search-layout > div.ikc-search-result > div > div:nth-child(3) > div.ikc-search-result > div > div.ikc-item-info > ul > li.ikc-item-branchvolumes > ul > li:nth-child(1) > div > a.hidden-xs > span.ikc-item-status')
temp_ab<-sapply(read, function (x) {x$getElementText()})
#temp_ab
result_guro_2<- data.frame(unlist(temp_title), unlist(temp_lib), unlist(temp_ab))
#result_guro_2
result_guro<-rbind(result_guro, result_guro_2)
}
}
result_guro <- result_guro[,-3] #대출가능한것만 추출했으니 대출가능여부는 제외하고 책이름, 도서관 두 가지만 표시
result_guro
library(RSelenium)
library(httr)
library(rvest)
library(XML)
library(dplyr)
remDr<-remoteDriver(remoteServerAddr="localhost", port=4445, browserName="chrome")
remDr$open()
#_searchListChk > div > dl > dd > div > a
#================송파 도서관 =======================
remDr$navigate("http://www.splib.or.kr/")
#검색창에 입력하고 넘어가기
searchbar<- remDr$findElement(using = "css", "#schMain > form > div > div > div.whiteBox > input")
searchbar$sendKeysToElement(list(search))
searchbutton<-remDr$findElements(using='css', "#schMain > form > div > div > div.btnBox > a > img")
sapply(searchbutton,function(x){x$clickElement()})
#전체 페이지 찾기
webElem<-remDr$findElements(using="css", "iframe")
remDr$switchToFrame(webElem[[1]])
page <- remDr$findElements(using = "css", "#wrap > div > p > a");page
pt<-sapply(page, function (x) {x$getElementText()})
pt
page<-unlist(pt)
page
end_page<-max(as.numeric(page))
end_page
#end_page
read <- remDr$findElements(using = "css", '#searchForm > ul > li > dl > dt > a')
temp_title<-sapply(read, function (x) {x$getElementText()})
temp_title
read <- remDr$findElements(using = "css", '#searchForm > ul > li > dl > dd.site > span:nth-child(1)')
temp_lib<-sapply(read, function (x) {x$getElementText()})
temp_lib
read <- remDr$findElements(using = "css", '#searchForm > ul > li > div > p > b')
temp_ab<-sapply(read, function (x) {x$getElementText()})
temp_ab
result_songpa<-data.frame(unlist(temp_title), unlist(temp_lib), unlist(temp_ab))
result_songpa
if(end_page>=2){
for(i in 2:end_page){
page_numb<-paste("#wrap > div > p > a:nth-child(",i,")",sep="")
searchbutton<-remDr$findElements(using='css',page_numb)
sapply(searchbutton,function(x){x$clickElement()})
read <- remDr$findElements(using = "css", '#searchForm > ul > li > dl > dt > a')
temp_title<-sapply(read, function (x) {x$getElementText()})
#temp_title
read <- remDr$findElements(using = "css", '#searchForm > ul > li > dl > dd.site > span:nth-child(1)')
temp_lib<-sapply(read, function (x) {x$getElementText()})
#temp_lib
read <- remDr$findElements(using = "css", '#searchForm > ul > li > div > p > b')
temp_ab<-sapply(read, function (x) {x$getElementText()})
#temp_ab
result_songpa<-rbind(result_songpa, data.frame(unlist(temp_title), unlist(temp_lib), unlist(temp_ab)))
}
}
colnames(result_songpa)<- c("책이름", "도서관","대출가능여부")
result_songpa <- subset(result_songpa, subset = result_songpa$대출가능여부=="대출가능")
result_songpa$도서관 <- str_sub(result_songpa[, 2], start = 6, end = -1)  #도서관뒤의 대출상태를 떼어내서 저장
result_songpa <- result_songpa[,-3] #대출가능한것만 추출했으니 대출가능여부는 제외하고 책이름, 도서관 두 가지만 표시
result_songpa
data.frame(lapply(result_songpa, trimws), stringsAsFactors = FALSE)
data.frame(lapply(result_songpa, trimws), stringsAsFactors = FALSE)
View(result_eunpyeong)
View(result_eunpyeong)
str_replace_all(result_songpa," ","")
str_replace_all(result_songpa$도서관," ","")
result_songpa
result_songpa <- str_replace_all(result_songpa$도서관," ","")  #도서관 이름 열의 내,외부의 모든 공백제거
result_songpa
library(RSelenium)
library(httr)
library(rvest)
library(XML)
library(dplyr)
remDr<-remoteDriver(remoteServerAddr="localhost", port=4445, browserName="chrome")
remDr$open()
#_searchListChk > div > dl > dd > div > a
#================송파 도서관 =======================
remDr$navigate("http://www.splib.or.kr/")
#검색창에 입력하고 넘어가기
searchbar<- remDr$findElement(using = "css", "#schMain > form > div > div > div.whiteBox > input")
searchbar$sendKeysToElement(list(search))
searchbutton<-remDr$findElements(using='css', "#schMain > form > div > div > div.btnBox > a > img")
sapply(searchbutton,function(x){x$clickElement()})
#전체 페이지 찾기
webElem<-remDr$findElements(using="css", "iframe")
remDr$switchToFrame(webElem[[1]])
page <- remDr$findElements(using = "css", "#wrap > div > p > a");page
pt<-sapply(page, function (x) {x$getElementText()})
pt
page<-unlist(pt)
page
end_page<-max(as.numeric(page))
end_page
#end_page
read <- remDr$findElements(using = "css", '#searchForm > ul > li > dl > dt > a')
temp_title<-sapply(read, function (x) {x$getElementText()})
temp_title
read <- remDr$findElements(using = "css", '#searchForm > ul > li > dl > dd.site > span:nth-child(1)')
temp_lib<-sapply(read, function (x) {x$getElementText()})
temp_lib
read <- remDr$findElements(using = "css", '#searchForm > ul > li > div > p > b')
temp_ab<-sapply(read, function (x) {x$getElementText()})
temp_ab
result_songpa<-data.frame(unlist(temp_title), unlist(temp_lib), unlist(temp_ab))
result_songpa
if(end_page>=2){
for(i in 2:end_page){
page_numb<-paste("#wrap > div > p > a:nth-child(",i,")",sep="")
searchbutton<-remDr$findElements(using='css',page_numb)
sapply(searchbutton,function(x){x$clickElement()})
read <- remDr$findElements(using = "css", '#searchForm > ul > li > dl > dt > a')
temp_title<-sapply(read, function (x) {x$getElementText()})
#temp_title
read <- remDr$findElements(using = "css", '#searchForm > ul > li > dl > dd.site > span:nth-child(1)')
temp_lib<-sapply(read, function (x) {x$getElementText()})
#temp_lib
read <- remDr$findElements(using = "css", '#searchForm > ul > li > div > p > b')
temp_ab<-sapply(read, function (x) {x$getElementText()})
#temp_ab
result_songpa<-rbind(result_songpa, data.frame(unlist(temp_title), unlist(temp_lib), unlist(temp_ab)))
}
}
colnames(result_songpa)<- c("책이름", "도서관","대출가능여부")
result_songpa <- subset(result_songpa, subset = result_songpa$대출가능여부=="대출가능")
result_songpa$도서관 <- str_sub(result_songpa[, 2], start = 6, end = -1)  #도서관뒤의 대출상태를 떼어내서 저장
result_songpa <- result_songpa[,-3] #대출가능한것만 추출했으니 대출가능여부는 제외하고 책이름, 도서관 두 가지만 표시
result_songpa <- data.frame(lapply(result_songpa, trimws), stringsAsFactors = FALSE)
result_songpa$도서관 <- str_replace_all(result_songpa$도서관," ","")  #도서관 이름 열의 내,외부의 모든 공백제거
result_songpa
library(RSelenium)
library(httr)
library(rvest)
library(XML)
library(dplyr)
library(stringr)
remDr<-remoteDriver(remoteServerAddr="localhost", port=4445, browserName="chrome")
remDr$open()
#_searchListChk > div > dl > dd > div > a
#================송파 도서관 =======================
remDr$navigate("http://www.splib.or.kr/")
#검색창에 입력하고 넘어가기
searchbar<- remDr$findElement(using = "css", "#schMain > form > div > div > div.whiteBox > input")
searchbar$sendKeysToElement(list(search))
searchbutton<-remDr$findElements(using='css', "#schMain > form > div > div > div.btnBox > a > img")
sapply(searchbutton,function(x){x$clickElement()})
#전체 페이지 찾기
webElem<-remDr$findElements(using="css", "iframe")
remDr$switchToFrame(webElem[[1]])
page <- remDr$findElements(using = "css", "#wrap > div > p > a");page
pt<-sapply(page, function (x) {x$getElementText()})
pt
page<-unlist(pt)
page
end_page<-max(as.numeric(page))
end_page
#end_page
read <- remDr$findElements(using = "css", '#searchForm > ul > li > dl > dt > a')
temp_title<-sapply(read, function (x) {x$getElementText()})
temp_title
read <- remDr$findElements(using = "css", '#searchForm > ul > li > dl > dd.site > span:nth-child(1)')
temp_lib<-sapply(read, function (x) {x$getElementText()})
temp_lib
read <- remDr$findElements(using = "css", '#searchForm > ul > li > div > p > b')
temp_ab<-sapply(read, function (x) {x$getElementText()})
temp_ab
result_songpa<-data.frame(unlist(temp_title), unlist(temp_lib), unlist(temp_ab))
result_songpa
if(end_page>=2){
for(i in 2:end_page){
page_numb<-paste("#wrap > div > p > a:nth-child(",i,")",sep="")
searchbutton<-remDr$findElements(using='css',page_numb)
sapply(searchbutton,function(x){x$clickElement()})
read <- remDr$findElements(using = "css", '#searchForm > ul > li > dl > dt > a')
temp_title<-sapply(read, function (x) {x$getElementText()})
#temp_title
read <- remDr$findElements(using = "css", '#searchForm > ul > li > dl > dd.site > span:nth-child(1)')
temp_lib<-sapply(read, function (x) {x$getElementText()})
#temp_lib
read <- remDr$findElements(using = "css", '#searchForm > ul > li > div > p > b')
temp_ab<-sapply(read, function (x) {x$getElementText()})
#temp_ab
result_songpa<-rbind(result_songpa, data.frame(unlist(temp_title), unlist(temp_lib), unlist(temp_ab)))
}
}
colnames(result_songpa)<- c("책이름", "도서관","대출가능여부")
result_songpa <- subset(result_songpa, subset = result_songpa$대출가능여부=="대출가능")
result_songpa$도서관 <- str_sub(result_songpa[, 2], start = 6, end = -1)  #도서관뒤의 대출상태를 떼어내서 저장
result_songpa <- result_songpa[,-3] #대출가능한것만 추출했으니 대출가능여부는 제외하고 책이름, 도서관 두 가지만 표시
result_songpa <- data.frame(lapply(result_songpa, trimws), stringsAsFactors = FALSE)
result_songpa$도서관 <- str_replace_all(result_songpa$도서관," ","")  #도서관 이름 열의 내,외부의 모든 공백제거
result_songpa
library(RSelenium)
library(httr)
library(rvest)
library(XML)
library(dplyr)
library(stringr)
remDr<-remoteDriver(remoteServerAddr="localhost", port=4445, browserName="chrome")
remDr$open()
#_searchListChk > div > dl > dd > div > a
#================송파 도서관 =======================
remDr$navigate("http://www.splib.or.kr/")
#검색창에 입력하고 넘어가기
searchbar<- remDr$findElement(using = "css", "#schMain > form > div > div > div.whiteBox > input")
searchbar$sendKeysToElement(list(search))
searchbutton<-remDr$findElements(using='css', "#schMain > form > div > div > div.btnBox > a > img")
sapply(searchbutton,function(x){x$clickElement()})
#전체 페이지 찾기
webElem<-remDr$findElements(using="css", "iframe")
remDr$switchToFrame(webElem[[1]])
page <- remDr$findElements(using = "css", "#wrap > div > p > a");page
pt<-sapply(page, function (x) {x$getElementText()})
pt
page<-unlist(pt)
page
end_page<-max(as.numeric(page))
end_page
#end_page
read <- remDr$findElements(using = "css", '#searchForm > ul > li > dl > dt > a')
temp_title<-sapply(read, function (x) {x$getElementText()})
temp_title
read <- remDr$findElements(using = "css", '#searchForm > ul > li > dl > dd.site > span:nth-child(1)')
temp_lib<-sapply(read, function (x) {x$getElementText()})
temp_lib
read <- remDr$findElements(using = "css", '#searchForm > ul > li > div > p > b')
temp_ab<-sapply(read, function (x) {x$getElementText()})
temp_ab
result_songpa<-data.frame(unlist(temp_title), unlist(temp_lib), unlist(temp_ab))
result_songpa
if(end_page>=2){
for(i in 2:end_page){
page_numb<-paste("#wrap > div > p > a:nth-child(",i,")",sep="")
searchbutton<-remDr$findElements(using='css',page_numb)
sapply(searchbutton,function(x){x$clickElement()})
read <- remDr$findElements(using = "css", '#searchForm > ul > li > dl > dt > a')
temp_title<-sapply(read, function (x) {x$getElementText()})
#temp_title
read <- remDr$findElements(using = "css", '#searchForm > ul > li > dl > dd.site > span:nth-child(1)')
temp_lib<-sapply(read, function (x) {x$getElementText()})
#temp_lib
read <- remDr$findElements(using = "css", '#searchForm > ul > li > div > p > b')
temp_ab<-sapply(read, function (x) {x$getElementText()})
#temp_ab
result_songpa<-rbind(result_songpa, data.frame(unlist(temp_title), unlist(temp_lib), unlist(temp_ab)))
}
}
colnames(result_songpa)<- c("책이름", "도서관","대출가능여부")
result_songpa <- subset(result_songpa, subset = result_songpa$대출가능여부=="대출가능")
result_songpa$도서관 <- str_sub(result_songpa[, 2], start = 6, end = -1)  #도서관뒤의 대출상태를 떼어내서 저장
result_songpa <- result_songpa[,-3] #대출가능한것만 추출했으니 대출가능여부는 제외하고 책이름, 도서관 두 가지만 표시
result_songpa <- data.frame(lapply(result_songpa, trimws), stringsAsFactors = FALSE)
result_songpa$도서관 <- str_replace_all(result_songpa$도서관," ","")  #도서관 이름 열의 내,외부의 모든 공백제거
result_songpa
result_songpa
library(rvest)
library(RSelenium)
library(httr)
library(XML)
library(dplyr)
library(stringr)
remDr<-remoteDriver(remoteServerAddr="localhost", port=4445, browserName="chrome")
remDr$open()
#_searchListChk > div > dl > dd > div > a
#================송파 도서관 =======================
remDr$navigate("http://www.splib.or.kr/")
#검색창에 입력하고 넘어가기
searchbar<- remDr$findElement(using = "css", "#schMain > form > div > div > div.whiteBox > input")
searchbar$sendKeysToElement(list(search))
searchbutton<-remDr$findElements(using='css', "#schMain > form > div > div > div.btnBox > a > img")
sapply(searchbutton,function(x){x$clickElement()})
#전체 페이지 찾기
webElem<-remDr$findElements(using="css", "iframe")
remDr$switchToFrame(webElem[[1]])
page <- remDr$findElements(using = "css", "#wrap > div > p > a");
page
pt<-sapply(page, function (x) {x$getElementText()})
pt
page<-unlist(pt)
page
end_page<-max(as.numeric(page))
end_page
#end_page
read <- remDr$findElements(using = "css", '#searchForm > ul > li > dl > dt > a')
temp_title<-sapply(read, function (x) {x$getElementText()})
temp_title
read <- remDr$findElements(using = "css", '#searchForm > ul > li > dl > dd.site > span:nth-child(1)')
temp_lib<-sapply(read, function (x) {x$getElementText()})
temp_lib
read <- remDr$findElements(using = "css", '#searchForm > ul > li > div > p > b')
temp_ab<-sapply(read, function (x) {x$getElementText()})
temp_ab
result_songpa<-data.frame(unlist(temp_title), unlist(temp_lib), unlist(temp_ab))
result_songpa
if(end_page>=2){
for(i in 2:end_page){
page_numb<-paste("#wrap > div > p > a:nth-child(",i,")",sep="")
searchbutton<-remDr$findElements(using='css',page_numb)
sapply(searchbutton,function(x){x$clickElement()})
read <- remDr$findElements(using = "css", '#searchForm > ul > li > dl > dt > a')
temp_title<-sapply(read, function (x) {x$getElementText()})
#temp_title
read <- remDr$findElements(using = "css", '#searchForm > ul > li > dl > dd.site > span:nth-child(1)')
temp_lib<-sapply(read, function (x) {x$getElementText()})
#temp_lib
read <- remDr$findElements(using = "css", '#searchForm > ul > li > div > p > b')
temp_ab<-sapply(read, function (x) {x$getElementText()})
#temp_ab
result_songpa<-rbind(result_songpa, data.frame(unlist(temp_title), unlist(temp_lib), unlist(temp_ab)))
}
}
colnames(result_songpa)<- c("책이름", "도서관","대출가능여부")
result_songpa <- subset(result_songpa, subset = result_songpa$대출가능여부=="대출가능")
#result_songpa$도서관 <- str_sub(result_songpa[, 2], start = 6, end = -1)  #도서관뒤의 대출상태를 떼어내서 저장
#result_songpa <- result_songpa[,-3] #대출가능한것만 추출했으니 대출가능여부는 제외하고 책이름, 도서관 두 가지만 표시
#result_songpa <- data.frame(lapply(result_songpa, trimws), stringsAsFactors = FALSE)
#result_songpa$도서관 <- str_replace_all(result_songpa$도서관," ","")  #도서관 이름 열의 내,외부의 모든 공백제거
result_songpa
